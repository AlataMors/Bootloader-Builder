From e89a64e746e23e232ed7a787a7c0ec70c6442229 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Wed, 2 Jan 2013 11:05:40 -0600
Subject: [PATCH 2/4] Revert "imximage: change parameters to set_imx_hdr"

This reverts commit ad0826dcd81ba6cf4cc93a4ca8337e1bc676c238.

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 tools/imximage.c |   20 +++++++++++---------
 tools/imximage.h |    6 ++++--
 2 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/tools/imximage.c b/tools/imximage.c
index 87a6b59..bed53f0 100644
--- a/tools/imximage.c
+++ b/tools/imximage.c
@@ -196,7 +196,8 @@ static void set_dcd_rst_v2(struct imx_header *imxhdr, uint32_t dcd_len,
 }
 
 static void set_imx_hdr_v1(struct imx_header *imxhdr, uint32_t dcd_len,
-		uint32_t entry_point, uint32_t flash_offset)
+					struct stat *sbuf,
+					struct mkimage_params *params)
 {
 	imx_header_v1_t *hdr_v1 = &imxhdr->header.hdr_v1;
 	flash_header_v1_t *fhdr_v1 = &hdr_v1->fhdr;
@@ -208,11 +209,11 @@ static void set_imx_hdr_v1(struct imx_header *imxhdr, uint32_t dcd_len,
 	/* Set magic number */
 	fhdr_v1->app_code_barker = APP_CODE_BARKER;
 
-	fhdr_v1->app_dest_ptr = entry_point - flash_offset -
+	fhdr_v1->app_dest_ptr = params->ep - imxhdr->flash_offset -
 		sizeof(struct imx_header);
-	fhdr_v1->app_code_jump_vector = entry_point;
+	fhdr_v1->app_code_jump_vector = params->ep;
 
-	base_offset = fhdr_v1->app_dest_ptr + flash_offset;
+	base_offset = fhdr_v1->app_dest_ptr + imxhdr->flash_offset ;
 	fhdr_v1->dcd_ptr_ptr =
 		(uint32_t) (offsetof(flash_header_v1_t, dcd_ptr) -
 		offsetof(flash_header_v1_t, app_code_jump_vector) +
@@ -228,7 +229,8 @@ static void set_imx_hdr_v1(struct imx_header *imxhdr, uint32_t dcd_len,
 }
 
 static void set_imx_hdr_v2(struct imx_header *imxhdr, uint32_t dcd_len,
-		uint32_t entry_point, uint32_t flash_offset)
+					struct stat *sbuf,
+					struct mkimage_params *params)
 {
 	imx_header_v2_t *hdr_v2 = &imxhdr->header.hdr_v2;
 	flash_header_v2_t *fhdr_v2 = &hdr_v2->fhdr;
@@ -238,9 +240,9 @@ static void set_imx_hdr_v2(struct imx_header *imxhdr, uint32_t dcd_len,
 	fhdr_v2->header.length = cpu_to_be16(sizeof(flash_header_v2_t));
 	fhdr_v2->header.version = IVT_VERSION; /* 0x40 */
 
-	fhdr_v2->entry = entry_point;
+	fhdr_v2->entry = params->ep;
 	fhdr_v2->reserved1 = fhdr_v2->reserved2 = 0;
-	fhdr_v2->self = entry_point - sizeof(struct imx_header);
+	fhdr_v2->self = params->ep - sizeof(struct imx_header);
 
 	fhdr_v2->dcd_ptr = fhdr_v2->self +
 			offsetof(imx_header_v2_t, dcd_table);
@@ -248,7 +250,7 @@ static void set_imx_hdr_v2(struct imx_header *imxhdr, uint32_t dcd_len,
 	fhdr_v2->boot_data_ptr = fhdr_v2->self +
 			offsetof(imx_header_v2_t, boot_data);
 
-	hdr_v2->boot_data.start = fhdr_v2->self - flash_offset;
+	hdr_v2->boot_data.start = fhdr_v2->self - imxhdr->flash_offset;
 
 	/* Security feature are not supported */
 	fhdr_v2->csf = 0;
@@ -522,7 +524,7 @@ static void imximage_set_header(void *ptr, struct stat *sbuf, int ifd,
 	dcd_len = parse_cfg_file(imxhdr, params->imagename);
 
 	/* Set the imx header */
-	(*set_imx_hdr)(imxhdr, dcd_len, params->ep, imxhdr->flash_offset);
+	(*set_imx_hdr)(imxhdr, dcd_len, sbuf, params);
 	*header_size_ptr = sbuf->st_size + imxhdr->flash_offset;
 }
 
diff --git a/tools/imximage.h b/tools/imximage.h
index 42b6090..34f293d 100644
--- a/tools/imximage.h
+++ b/tools/imximage.h
@@ -168,7 +168,9 @@ typedef void (*set_dcd_rst_t)(struct imx_header *imxhdr,
 					uint32_t dcd_len,
 					char *name, int lineno);
 
-typedef void (*set_imx_hdr_t)(struct imx_header *imxhdr, uint32_t dcd_len,
-		uint32_t entry_point, uint32_t flash_offset);
+typedef void (*set_imx_hdr_t)(struct imx_header *imxhdr,
+					uint32_t dcd_len,
+					struct stat *sbuf,
+					struct mkimage_params *params);
 
 #endif /* _IMXIMAGE_H_ */
-- 
1.7.10.4

